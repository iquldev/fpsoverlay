name: Build and Release FPS Overlay

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., 1.0.0)"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        minecraft_version: ["1.20", "1.21"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.minecraft_version == '1.20' && '17' || '21' }}

      - uses: gradle/gradle-build-action@v2

      - run: chmod +x ${{ matrix.minecraft_version }}/gradlew

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ${{ matrix.minecraft_version }}/.gradle
          key: ${{ runner.os }}-gradle-${{ matrix.minecraft_version }}-${{ hashFiles(format('{0}/**/*.gradle*', matrix.minecraft_version)) }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.minecraft_version }}-

      - name: Build for MC ${{ matrix.minecraft_version }}
        working-directory: ${{ matrix.minecraft_version }}
        run: ./gradlew build

      - run: |
          mkdir -p build-output
          cd ${{ matrix.minecraft_version }}/build/libs
          for jar in *.jar; do
            if [[ ! "$jar" =~ (sources|dev|javadoc) ]]; then
              bn=${jar%.*}
              cp "$jar" "../../../build-output/fpsoverlay-${bn##*-}-mc${{ matrix.minecraft_version }}.jar"
            fi
          done
          for s in *-sources.jar; do
            [ -f "$s" ] && cp "$s" "../../../build-output/fpsoverlay-${s%-sources.jar##*-}-mc${{ matrix.minecraft_version }}-sources.jar"
          done

      - uses: actions/upload-artifact@v3
        with:
          name: fpsoverlay-mc${{ matrix.minecraft_version }}
          path: build-output/*
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v3

      - run: |
          mkdir -p release-files
          find . -name "*.jar" -exec cp {} release-files/ \;

      - id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            V="${{ github.event.inputs.version }}"
            T="v$V"
          else
            V=${GITHUB_REF#refs/tags/v}
            T=${GITHUB_REF#refs/tags/}
          fi
          echo "VERSION=$V" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$T" >> $GITHUB_OUTPUT

      - run: |
          cat > release-notes.md << 'EOF'
          # FPS Overlay v${{ steps.version.outputs.VERSION }}

          ## 📝 Changelog

          EOF
          if [ $(git tag --list | wc -l) -gt 1 ]; then
            P=$(git tag --sort=-version:refname | sed -n '2p')
            echo "### Changes since $P:" >> release-notes.md
            git log --pretty=format:"- %s" $P..HEAD >> release-notes.md
          else
            echo "### Initial release features:" >> release-notes.md
            git log --pretty=format:"- %s" >> release-notes.md
          fi
          echo "---" >> release-notes.md
          echo "*Built automatically with GitHub Actions*" >> release-notes.md

      - uses: softprops/action-gh-release@v1
        with:
          name: "FPS Overlay ${{ steps.version.outputs.TAG_NAME }}"
          tag_name: ${{ steps.version.outputs.TAG_NAME }}
          body_path: release-notes.md
          files: release-files/*
          draft: false
          prerelease: ${{ contains(steps.version.outputs.VERSION, 'alpha') || contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: Kir-Antipov/mc-publish@v3.3
        if: ${{ secrets.MODRINTH_TOKEN != '' }}
        with:
          modrinth-id: ${{ vars.MODRINTH_PROJECT_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          files: |
            release-files/fpsoverlay-*-mc1.20.jar
            release-files/fpsoverlay-*-mc1.21.jar
          name: "FPS Overlay ${{ steps.version.outputs.VERSION }}"
          version: ${{ steps.version.outputs.VERSION }}
          changelog-file: release-notes.md
          loaders: fabric
          game-versions: |
            1.20
            1.20.1
          dependencies: |
            fabric-api
            depends
            *

      - uses: Kir-Antipov/mc-publish@v3.3
        if: ${{ secrets.CURSEFORGE_TOKEN != '' }}
        with:
          curseforge-id: ${{ vars.CURSEFORGE_PROJECT_ID }}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
          files: |
            release-files/fpsoverlay-*-mc1.20.jar
            release-files/fpsoverlay-*-mc1.21.jar
          name: "FPS Overlay ${{ steps.version.outputs.VERSION }}"
          version: ${{ steps.version.outputs.VERSION }}
          changelog-file: release-notes.md
          loaders: fabric
          game-versions: |
            1.20
            1.20.1
          dependencies: |
            fabric-api
            required
