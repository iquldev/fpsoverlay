name: Build and Release FPS Overlay

on:
  push:
    tags:
      - "v*.*.*" 
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., 1.0.0)"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        minecraft_version: ["1.20", "1.21"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ matrix.minecraft_version == '1.20' && '17' || '21' }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x ${{ matrix.minecraft_version }}/gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ${{ matrix.minecraft_version }}/.gradle
          key: ${{ runner.os }}-gradle-${{ matrix.minecraft_version }}-${{ hashFiles(format('{0}/**/*.gradle*', matrix.minecraft_version)) }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.minecraft_version }}-

      - name: Build mod for MC ${{ matrix.minecraft_version }}.x
        working-directory: ${{ matrix.minecraft_version }}
        run: ./gradlew build

      - name: Prepare artifacts
        run: |
          mkdir -p build-output
          cd ${{ matrix.minecraft_version }}/build/libs

          # Находим основной JAR (не sources, не dev)
          for jar in *.jar; do
            if [[ ! "$jar" =~ (sources|dev|javadoc) ]]; then
              # Переименовываем с добавлением версии MC
              base_name="${jar%.*}"
              new_name="fpsoverlay-${base_name##*-}-mc${{ matrix.minecraft_version }}.jar"
              cp "$jar" "../../../build-output/$new_name"
              echo "Created: $new_name"
            fi
          done

          # Копируем sources JAR если есть
          for jar in *-sources.jar; do
            if [ -f "$jar" ]; then
              base_name="${jar%-sources.jar}"
              new_name="fpsoverlay-${base_name##*-}-mc${{ matrix.minecraft_version }}-sources.jar"
              cp "$jar" "../../../build-output/$new_name"
              echo "Created sources: $new_name"
            fi
          done

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: fpsoverlay-mc${{ matrix.minecraft_version }}
          path: build-output/*
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v3

      - name: Collect all JAR files
        run: |
          mkdir -p release-files
          find . -name "*.jar" -exec cp {} release-files/ \;
          ls -la release-files/

      - name: Get version information
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
            TAG_NAME="v$VERSION"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
            TAG_NAME=${GITHUB_REF#refs/tags/}
          fi

          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Generate release notes
        run: |
          cat > release-notes.md << 'EOF'
          # FPS Overlay v${{ steps.version.outputs.VERSION }}

          ## 📝 Changelog

          EOF

          # Добавляем changelog из коммитов
          if [ $(git tag --list | wc -l) -gt 1 ]; then
            PREVIOUS_TAG=$(git tag --sort=-version:refname | sed -n '2p')
            echo "### Changes since $PREVIOUS_TAG:" >> release-notes.md
            git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD >> release-notes.md
          else
            echo "### Initial release features:" >> release-notes.md
            git log --pretty=format:"- %s" >> release-notes.md
          fi

          echo "" >> release-notes.md
          echo "" >> release-notes.md
          echo "---" >> release-notes.md
          echo "*Built automatically with GitHub Actions*" >> release-notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "FPS Overlay ${{ steps.version.outputs.TAG_NAME }}"
          tag_name: ${{ steps.version.outputs.TAG_NAME }}
          body_path: release-notes.md
          files: release-files/*
          draft: false
          prerelease: ${{ contains(steps.version.outputs.VERSION, 'alpha') || contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to Modrinth (if configured)
        if: secrets.MODRINTH_TOKEN != ''
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: ${{ vars.MODRINTH_PROJECT_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

          files: |
            release-files/fpsoverlay-*-mc1.20.jar
            release-files/fpsoverlay-*-mc1.21.jar

          name: "FPS Overlay ${{ steps.version.outputs.VERSION }}"
          version: ${{ steps.version.outputs.VERSION }}
          changelog-file: release-notes.md

          loaders: fabric
          game-versions: |
            1.20
            1.20.1
            1.20.2
            1.20.3
            1.20.4
            1.20.5
            1.20.6
            1.21
            1.21.1
            1.21.2
            1.21.3
            1.21.4
            1.21.5
          dependencies: |
            fabric-api | depends | *

      - name: Upload to CurseForge (if configured)
        if: secrets.CURSEFORGE_TOKEN != ''
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          curseforge-id: ${{ vars.CURSEFORGE_PROJECT_ID }}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          files: |
            release-files/fpsoverlay-*-mc1.20.jar
            release-files/fpsoverlay-*-mc1.21.jar

          name: "FPS Overlay ${{ steps.version.outputs.VERSION }}"
          version: ${{ steps.version.outputs.VERSION }}
          changelog-file: release-notes.md

          loaders: fabric
          game-versions: |
            1.20
            1.20.1
            1.20.2
            1.20.3
            1.20.4
            1.20.5
            1.20.6
            1.21
            1.21.1
            1.21.2
            1.21.3
            1.21.4
            1.21.5
          dependencies: |
            fabric-api | required
